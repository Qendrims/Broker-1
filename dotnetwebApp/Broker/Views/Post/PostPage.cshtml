@using Broker.ViewModels
@using Broker.Models
@model FilteredPostViewModel;
@{

    var pager = new Pagination();
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
    }
}

<link href="@Url.Content("~/css/UserPostPage.css")" rel="stylesheet" type="text/css" />
<style>
    section.range-slider {
        position: relative;
        width: 100%;
        height: 35px;
    }

        section.range-slider input {
            pointer-events: none;
            position: absolute;
            overflow: hidden;
            left: 0;
            top: 15px;
            width: 100%;
            outline: none;
            height: 18px;
            margin: 0;
            padding: 0;
        }

            section.range-slider input::-webkit-slider-thumb {
                pointer-events: all;
                position: relative;
                z-index: 1;
                outline: 0;
            }

            section.range-slider input::-moz-range-thumb {
                pointer-events: all;
                position: relative;
                z-index: 10;
                -moz-appearance: none;
                width: 9px;
            }

            section.range-slider input::-moz-range-track {
                position: relative;
                z-index: -1;
                background-color: rgba(0, 0, 0, 1);
                border: 0;
            }

            section.range-slider input:last-of-type::-moz-range-track {
                -moz-appearance: none;
                background: none transparent;
                border: 0;
            }

            section.range-slider input[type=range]::-moz-focus-outer {
                border: 0;
            }

    .form-label {
        align-self: flex-start;
    }

    .hidden {
        display: none;
    }
</style>


<div class="container" style="display: flex;gap: 10px;">


    <form id="filterForm" class="search-form" method='get' asp-action="PostPage">


        <select id="select-category" class="col-12 p-0 form-select" name="category" onchange="categoryChange()">
            <option value="">Select Category</option>
            @foreach (var cat in Model.FilteredCategories)
            {
                <option selected="@(Model.Category == @cat.CategoryName)" value="@cat.CategoryName">@cat.CategoryName</option>
            }
        </select>


        <select class="col-12 p-0 form-select" id="select-city" name='city'>
            <option value="">Select City</option>
            @foreach (var city in @Model.Cities)
            {
                <option selected="@(Model.City == city)" value="@city">@city</option>
            }
        </select>

        <section class="range-slider">
            <label>Select Price</label>
            <span class="rangeValues"></span>
            <input value="5" name="minPrice" min="0" max="990" step="10" type="range">
            <input value="10" name="maxPrice" min="10" max="1000" step="10" type="range">
        </section>

        <div class="form-inputs" id="rooms">
            <label class="form-label">Rooms</label>
            <input class="col-12 p-0 form-control" type="number" name="rooms" />
        </div>

        <div class="form-inputs" id="bathrooms">
            <label class="form-label">Bathrooms</label>
            <input class="col-12 p-0 form-control" type="number" name="bathrooms" />
        </div>

        <div class="form-inputs hidden" id="story">
            <label class="form-label">Story</label>
            <input class="col-12 p-0 form-control" type="number" name="story" />
        </div>

        <div class="form-inputs" id="floors">
            <label class="form-label">Floors</label>
            <input class="col-12 p-0 form-control" type="number" name="floors" />
        </div>

        <label class="form-label">Size</label>
        <div style="width: 100%;display: flex;align-items: center" id="size">
            <input class="col-12 p-0 form-control" type="number" name="size" />
            <span>m<sup>2</sup></span>
        </div>


        <input id="btn-submit" type='submit' class="btn btn-primary" value='Search' />
    </form>

    @*  <a href="/Archive/Index" class="btn btn-primary">Archived posts</a>*@


    <div class="container" style="padding: 0">
        <div class="row">

            @foreach (var post in @Model.FilteredPosts)
            {

                <div class="col-lg-4 col-sm-12 col-md-6">

                    <article class="post-card">
                        <div class="post-card-img">
                            <img src="~/UploadFiles/@post.Images.FirstOrDefault().ImageName" />
                        </div>
                        <div class="post-card-info">
                            <div class="post-card-info-address">

                                <h3>@post.Country</h3>
                                <p>@post.City</p>
                                <hr />
                                <h3>@post.Title</h3>
                                <p>@post.Description</p>
                                <hr />
                                <div class="post-price-btns">
                                    <h3>$@post.Price</h3>
                                    <a asp-controller="Post" asp-action="Detail" asp-route-id=@post.PostId class="btn btn-outline-primary">View Details</a>
                                </div>
                            </div>
                        </div>
                    </article>
                </div>
            }

        </div>
    </div>

</div>


<div class="container">


    @if (pager.TotalPages > 0)
    {
        <ul class="pagination justify-content-center">

            @if (pager.CurrentPage > 1)
            {
                <li class="page-item ">
                    <a class="page-link" asp-controller="Post" asp-action="PostPage" asp-route-category=@Model.Category asp-route-city=@Model.City asp-route-pg="1">First</a>
                </li>
                <li class="page-item ">
                    <a class="page-link" asp-controller="Post" asp-action="PostPage" asp-route-category=@Model.Category asp-route-city=@Model.City asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
                </li>
            }

            @for (var page = pager.StartPage; page <= pager.EndPage; page++)
            {
                <li class="page-item @(page == pager.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Post" asp-action="PostPage" asp-route-category=@Model.Category asp-route-city=@Model.City asp-route-pg="@(page)">@(page)</a>
                </li>
            }

            @if (pager.CurrentPage < pager.TotalPages)
            {
                <li class="page-item ">
                    <a class="page-link" asp-controller="Post" asp-action="PostPage" asp-route-category=@Model.Category asp-route-city=@Model.City asp-route-pg="@(pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item ">
                    <a class="page-link" asp-controller="Post" asp-action="PostPage" asp-route-category=@Model.Category asp-route-city=@Model.City asp-route-pg="@(pager.TotalPages)">Last</a>
                </li>
            }

        </ul>
    }


</div>

@section Scripts{


<script src="@Url.Content("~/js/UserPostPage.js")"></script>
<script>

      function categoryChange(){
      let category = document.getElementById('select-category').value;
      let inputs = document.querySelectorAll('.form-inputs');


      inputs.forEach(inp => {
      if(category == "Land"){
          inp.classList.add('hidden');
        } else if(category == "House"){
            inp.id != 'story' && inp.classList.remove('hidden')
        } else if(category == "Apartment"){
            inp.id != 'floors' && inp.classList.remove('hidden')
        }
      })
    }


          function getVals(){
        // Get slider values
        var parent = this.parentNode;
        var slides = parent.getElementsByTagName("input");
          var slide1 = parseFloat( slides[0].value );
          var slide2 = parseFloat( slides[1].value );
        // Neither slider will clip the other, so make sure we determine which is larger
        if( slide1 > slide2 ){ var tmp = slide2; slide2 = slide1; slide1 = tmp; }

        var displayElement = parent.getElementsByClassName("rangeValues")[0];
            displayElement.innerHTML = slide1 + " - " + slide2;
      }

      window.onload = function(){
        // Initialize Sliders
        var sliderSections = document.getElementsByClassName("range-slider");
            for( var x = 0; x < sliderSections.length; x++ ){
              var sliders = sliderSections[x].getElementsByTagName("input");
              for( var y = 0; y < sliders.length; y++ ){
                if( sliders[y].type ==="range" ){
                  sliders[y].oninput = getVals;
                  // Manually trigger event first time to display values
                  sliders[y].oninput();
                }
              }
            }
      }

</script>
}